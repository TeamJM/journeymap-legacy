# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Release tagged build

on:
  push:
    tags: [ '*' ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ github.ref_name }}
      RELEASE_VERSION: ${{ github.ref_name }}
      SNAPSHOT: ${{ endsWith(github.ref_name, '-snapshot') || contains(github.event.head_commit.message, '[snapshot]') }}
    steps:
      - name: Checkout mod repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 32

      - name: Validate gradle wrapper checksum
        uses: gradle/wrapper-validation-action@v2

      - name: Set up JDK versions
        uses: actions/setup-java@v4
        with:
          java-version: |
            8
            21
            17
          distribution: 'zulu'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup the workspace
        run: ./gradlew --build-cache --info --stacktrace setupCIWorkspace

      - name: Build the mod
        run: ./gradlew --build-cache --info --stacktrace assemble

      # Continue on error in the following steps to make sure releases still get made even if one of the methods fails

      - name: Delete old release if it already exists
        run: gh release delete --yes "${RELEASE_VERSION}"
        continue-on-error: true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release under current tag
        run: |
          PRERELEASE=""
          if [[ "$SNAPSHOT" == "true" ]]; then
            PRERELEASE="--prerelease"
          fi
          ./gradlew --build-cache --stacktrace processDocs
          gh release create "${RELEASE_VERSION}" -F "build/doc/changelog.html" $PRERELEASE ./build/libs/*.jar
        shell: bash
        continue-on-error: true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to Modrinth and CurseForge
        run: ./gradlew --build-cache --info --stacktrace assemble publish
        continue-on-error: true
        env:
          MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
          CURSEFORGE_TOKEN: ${{ secrets.CURSEFORGE_TOKEN }}
        if: ${{ env.SNAPSHOT != 'true' }}
